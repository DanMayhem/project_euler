#!python
"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""
from math import sqrt
from functools import lru_cache

def pentagonals(m=None):
	i = 1
	while True:
		p = int(i*(3*i-1)/2)
		if (m is not None) and p > m:
		  return
		yield p 
		i+=1

@lru_cache(maxsize=None)
def is_pentagonal(n):
	x = (1+sqrt(1+24*n))/6
	y = (1-sqrt(1+24*n))/6
	return (x>0) and (x==int(x)) or (y>0)and(y==int(y))

if __name__=="__main__":
	ps = list(pentagonals(10000000))
	for k in ps:
		for j in ps:
			if j>=k:
				continue
			if is_pentagonal(k-j):
				if is_pentagonal(k+j):
					print("ding {0}-{1}".format(k,j))

